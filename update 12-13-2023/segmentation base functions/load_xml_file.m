function [xyout,reduce_annotations]=load_xml_file(outpth,xmlfile,dm)
% this scripts reads the xml file generated by imagescope aperio systme
% first, check if annotation coordinates are already saved to annotation
% datafile.  If not, load them for all images and save them there.
% Written in 2020 by Ashley Lynn Kiemen, Johns Hopkins University
% please cite Kiemen et al, Nature methods (2022)
% last updated in December 2023 by ALK

    if ~exist('dm','var');dm=[];end
    disp('  1. of 3. loading annotation data from xml file')
    filename=[outpth,'annotations.mat'];
    
    stt=xml2struct2(xmlfile);
    try annexist=isfield(stt.Annotations.Annotation.Regions,'Region');
        multlayer=0;
    catch
        annexist=~isempty(stt.Annotations.Annotation);
        multlayer=1;
    end

    if annexist==1
        [xyout,reduce_annotations]=load_annotations(stt,multlayer,1);
        if ~isempty(xyout);xyout(:,3:4)=xyout(:,3:4)*reduce_annotations;end
        
        if exist(filename,'file')
            save(filename,'xyout','reduce_annotations','dm','-append');
        else
            save(filename,'xyout','reduce_annotations','dm');
        end
    end

end


function [xyout,reduce_annotations]=load_annotations(stt,multlayer,layernum)
    if multlayer==1
        xyout=cell([length(stt.Annotations.Annotation) 1]);
        try 
            reduce_annotations=str2double(stt.Annotations.Attributes.MicronsPerPixel);
        catch
            reduce_annotations=1;
        end
        for layer=1:length(stt.Annotations.Annotation)
            % for each annotation layer
            if ~isfield(stt.Annotations.Annotation{layer}.Regions,'Region');continue;end
            regionnum=length(stt.Annotations.Annotation{layer}.Regions.Region);
            RegionInfo={};
            for kr=1:regionnum
                % for each individual annotation
                if regionnum>1
                    vertexnum=length(stt.Annotations.Annotation{layer}.Regions.Region{kr}.Vertices.Vertex);
                    RegionInfo{kr}=stt.Annotations.Annotation{layer}.Regions.Region{kr}.Attributes;
                        for kv=1:vertexnum
                            try
                                x=str2num(stt.Annotations.Annotation{layer}.Regions.Region{kr}.Vertices.Vertex{kv}.Attributes.X);
                                y=str2num(stt.Annotations.Annotation{layer}.Regions.Region{kr}.Vertices.Vertex{kv}.Attributes.Y);
                                xyout{layer}=[xyout{layer};[layer kr x y]];
                            catch
                                continue;
                            end
                        end
                else
                    vertexnum=length(stt.Annotations.Annotation{layer}.Regions.Region.Vertices.Vertex);
                    RegionInfo{kr}=stt.Annotations.Annotation{layer}.Regions.Region.Attributes;
                    for kv=1:vertexnum
                        x=str2num(stt.Annotations.Annotation{layer}.Regions.Region.Vertices.Vertex{kv}.Attributes.X);
                        y=str2num(stt.Annotations.Annotation{layer}.Regions.Region.Vertices.Vertex{kv}.Attributes.Y);
                        xyout{layer}=[xyout{layer};[layer kr x y]];
                    end
                end
            end 
        end
        xyout=cell2mat(xyout);

    else
        try 
            reduce_annotations=str2double(stt.Annotations.Attributes.MicronsPerPixel);
        catch
            reduce_annotations=1;
        end
        regionnum=length(stt.Annotations.Annotation.Regions.Region);
        xyout=[];
        RegionInfo={};
        for kr=1:regionnum
            % check vertex number
            if regionnum>1
                vertexnum=length(stt.Annotations.Annotation.Regions.Region{kr}.Vertices.Vertex);
                RegionInfo{kr}=stt.Annotations.Annotation.Regions.Region{kr}.Attributes;
                    for kv=1:vertexnum
                        x=str2num(stt.Annotations.Annotation.Regions.Region{kr}.Vertices.Vertex{kv}.Attributes.X);
                        y=str2num(stt.Annotations.Annotation.Regions.Region{kr}.Vertices.Vertex{kv}.Attributes.Y);
                        xyout=[xyout;[layernum kr x y]];
                    end
            else
                vertexnum=length(stt.Annotations.Annotation.Regions.Region.Vertices.Vertex);
                RegionInfo{kr}=stt.Annotations.Annotation.Regions.Region.Attributes;
                for kv=1:vertexnum
                    x=str2num(stt.Annotations.Annotation.Regions.Region.Vertices.Vertex{kv}.Attributes.X);
                    y=str2num(stt.Annotations.Annotation.Regions.Region.Vertices.Vertex{kv}.Attributes.Y);
                    xyout=[xyout;[layernum kr x y]];
                end
            end
        end
    end



end

